import pandas as pd

main_data = pd.read_csv('path/to/main_data.csv')
day_data = pd.read_csv('path/to/day.csv')

"""Another copy of Proyek Analisis Data.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1SpuoVe4bEoU0tAR7B9mwSMOPepZcsjNN

# Proyek Analisis Data: [Input Nama Dataset]
- **Nama:** [Ulfah Humairah]
- **Email:** [m211b4kx4372@bangkit.academy]
- **ID Dicoding:** [m211b4kx4372]

## Menentukan Pertanyaan Bisnis

- Pertanyaan 1
Bagaimana pengaruh hari libur terhadap penjualan?
- Pertanyaan 2
Apakah terdapat hubungan antara hari dalam minggu (weekday) dengan kinerja penjualan?

## Import Semua Packages/Library yang Digunakan
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

"""## Data Wrangling

### Gathering Data
"""

day_df=pd.read_csv('/content/day.csv')
day_df.head(5)

"""Merge Dataset"""

day_df = pd.read_csv('/content/day.csv')

main_data = day_df
print(main_data)
main_data.to_csv("main_data.csv", index=False)

"""**Insight:**
- xxx
- xxx

### Assessing Data

Melihat informasi setiap kolom dataset
"""

main_data.info()

"""Mengetahui jumlah missing value di setiap Kolom day_df"""

day_df.isnull().sum()

"""Memeriksa data Duplicated"""

data_duplicated_day = day_df.duplicated().sum()
print("Jumlah data Duplikat dari Data Day CSV sebanyak : ", data_duplicated_day)

day_df.describe()

"""**Insight:**
- xxx
- xxx

### Cleaning Data

Convert tipe data "dateday" menjadi datetime
"""

# Mengubah kolom 'dteday' pada day_df
day_df['dteday'] = pd.to_datetime(day_df['dteday'])
# Menampilkan informasi tipe data setelah perubahan
print("Tipe data pada day_df setelah perubahan:")
print(day_df.info())

"""Mengubah value kolom "season" , agar data lebih informatif/deskriptif"""

# Mengubah angka season menjadi nama musim yang lebih mudah dimengerti
season_mapping = {1: 'Spring', 2: 'Summer', 3: 'Fall', 4: 'Winter'}
day_df['season_name'] = day_df['season'].map(season_mapping)
day_df.head()

"""Mengubah nilai dari "temp, atemp, hum and windspeed" ke bentuk yang telah dinormalisasi sebelumnya. sehingga lebih mudah dianalisis."""

day_df['temp'] = day_df['temp'] * 41
day_df['atemp'] = day_df['atemp'] * 50
day_df['hum'] = day_df['hum'] * 100
day_df['windspeed'] = day_df['windspeed'] * 67

# Menampilkan 5 baris pertama untuk memeriksa perubahan
day_df.head()

"""Simpan dataset yang sudah clean"""

day_df.to_csv("clean_day_bike_data.csv", index=False)

"""**Insight:**
- xxx
- xxx

## Exploratory Data Analysis (EDA)

### Explore ...
"""

day_df.describe(include="all")

"""Jumlah Penggunaan Sepeda tiap musim"""

# Mapping season to readable names
season_mapping = {1: 'Spring', 2: 'Summer', 3: 'Fall', 4: 'Winter'}
day_df['season_name'] = day_df['season'].map(season_mapping)

# Average rentals per season
season_avg_df = day_df.groupby('season_name')['cnt'].sum().reset_index()
season_avg_df.columns = ['Musim', 'Total Penggunaan Sepeda']
season_avg_df

"""Jumlah penyewaan Sepeda Pada Kategori Suhu Tertentu"""

# Categorizing temperature into 5 bins
day_df['temp_bin'], bins = pd.cut(day_df['temp'], bins=5, labels=['Sangat Dingin', 'Dingin', 'Sedang', 'Hangat', 'Panas'], retbins=True)

# Average rentals per temperature category
temp_avg_df = day_df.groupby('temp_bin')['cnt'].sum().reset_index()
temp_avg_df.columns = ['Kategori Suhu', 'Total Penyewaan Sepeda']
temp_avg_df

# Memisahkan data berdasarkan hari kerja dan hari libur
working_day_df = day_df[day_df['workingday'] == 1]
holiday_df = day_df[day_df['workingday'] == 0]

# Menghitung Rata-Rata Penyewaan per Musim untuk Hari Kerja dan Hari Libur
working_day_season_avg_df = working_day_df.groupby('season_name')['cnt'].sum().reset_index()
holiday_season_avg_df = holiday_df.groupby('season_name')['cnt'].sum().reset_index()

# Mengganti Nama Kolom untuk Kejelasan
working_day_season_avg_df.columns = ['Musim', 'Total Penyewaan (Hari Kerja)']
holiday_season_avg_df.columns = ['Musim', 'Total Penyewaan (Hari Libur)']

# Menggabungkan Kedua DataFrame untuk Perbandingan
season_comparison_df = pd.merge(working_day_season_avg_df, holiday_season_avg_df, on='Musim')
print(season_comparison_df)

"""**Insight:**
- xxx
- xxx

## Visualization & Explanatory Analysis

### Pertanyaan 1:

Bagaimana pengaruh hari libur terhadap penjualan?
"""

# Menghitung Bagaimana pengaruh hari libur terhadap penjualan
season_avg = day_df.groupby('season_name')['cnt'].mean()

# Visualisasi
import matplotlib.pyplot as plt
season_avg.plot(kind='bar', title='pengaruh hari libur terhadap penjualan')
plt.xlabel('Bagaimana')
plt.ylabel('pengaruh hari libur terhadap penjualan(cnt)')
plt.show()

"""### Pertanyaan 2:

Apakah terdapat hubungan antara hari dalam minggu (weekday) dengan kinerja penjualan
"""

# Membagi kolom suhu (temp) ke dalam 5 kategori menggunakan pd.cut
day_df['temp_bin'], bins = pd.cut(day_df['temp'],
                                   bins=5,
                                   labels=['Sangat Dingin', 'Dingin', 'Sedang', 'Hangat', 'Panas'],
                                   retbins=True)

# Menghitung rata-rata penyewaan sepeda per kategori suhu
temp_avg = day_df.groupby('temp_bin')['cnt'].mean()

# Siapkan data untuk visualisasi
categories = day_df['temp_bin'].cat.categories
temp_ranges = [f"{bins[i]:.2f} - {bins[i+1]:.2f}" for i in range(len(bins)-1)]
average_counts = temp_avg.values

# Membuat visualisasi
plt.figure(figsize=(10, 6))

# Bar chart untuk rata-rata penyewaan sepeda
bars = plt.bar(categories, average_counts, color='skyblue', alpha=0.7, edgecolor='black')

# Menambahkan garis horizontal untuk menunjukkan kisaran suhu
for i, bar in enumerate(bars):
    y = bar.get_height()
    plt.text(bar.get_x() + bar.get_width() / 2, y + 1, temp_ranges[i], ha='center', color='black')

# Mengatur label dan judul
plt.xlabel('Kategori Suhu', fontsize=12)
plt.ylabel('pengaruh hari libur terhadap penjualan (cnt)', fontsize=12)
plt.title('Rata-rata Penyewaan Sepeda Berdasarkan Kategori Suhu dan Kisaran Suhu', fontsize=16)

# Menampilkan grid
plt.grid(axis='y')

# Menampilkan grafik
plt.show()

"""**Insight:**
- xxx
- xxx

## Analisis Lanjutan (Opsional)
"""



"""## Conclusion

- Bagaimana pengaruh hari libur terhadap penjualan? Terdapat perbedaan signifikan antara penyewaan sepeda pada hari kerja dan hari libur, dengan hari libur menunjukkan total penyewaan yang lebih tinggi.

- Apakah terdapat hubungan antara hari dalam minggu (weekday) dengan kinerja penjualan? Hubungan antara hari dalam minggu dan kinerja penjualan menunjukkan pola tertentu, di mana beberapa hari memiliki penyewaan yang lebih tinggi dibandingkan yang lain.
"""